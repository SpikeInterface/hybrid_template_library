{"version":3,"file":"static/js/975.2484ce8f.chunk.js","mappings":"wLAuBIA,GAnBIC,EAAG,MAAMC,EAGfC,WAAAA,GAAuB,IAAXC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClB,IADmBG,EAAAA,EAAAA,GAAA,qBACfJ,GAAS,GAAKA,EAAQ,EACxB,MAAM,IAAIK,MAAM,iEAElBC,KAAKN,MAAQA,CACf,CACA,iBAAOO,CAAUC,GAAY,IAAX,MAAER,GAAOQ,EACzB,OAAO,IAAIV,EAAME,EACnB,CACAS,MAAAA,CAAOC,GACL,OAAOC,EAAAA,EAAgBD,EAAM,CAAEV,MAAOM,KAAKN,OAC7C,CACAY,MAAAA,CAAOF,GACL,OAAOC,EAAAA,GAAkBD,EAC3B,IACDN,EAAAA,EAAAA,GAAAP,EAAA,UAjBkB,QAAMA,E","sources":["../node_modules/@zarrita/core/node_modules/numcodecs/dist/zlib.js"],"sourcesContent":["import \"./chunk-INHXZS53.js\";\n\n// src/zlib.ts\nimport * as fflate from \"fflate\";\nvar Zlib = class Zlib2 {\n  static codecId = \"zlib\";\n  level;\n  constructor(level = 1) {\n    if (level < -1 || level > 9) {\n      throw new Error(\"Invalid zlib compression level, it should be between -1 and 9\");\n    }\n    this.level = level;\n  }\n  static fromConfig({ level }) {\n    return new Zlib2(level);\n  }\n  encode(data) {\n    return fflate.zlibSync(data, { level: this.level });\n  }\n  decode(data) {\n    return fflate.unzlibSync(data);\n  }\n};\nvar zlib_default = Zlib;\nexport {\n  zlib_default as default\n};\n"],"names":["zlib_default","_Zlib","Zlib2","constructor","level","arguments","length","undefined","_defineProperty","Error","this","fromConfig","_ref","encode","data","fflate","decode"],"sourceRoot":""}